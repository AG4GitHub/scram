Characteristics of Transfer In and Transfer Out:
* Root transfer In may be used to analyze specific sub-tree. [done]
* Get the list of transfers
    ** If transfer is a root, then check if there are other nodes in the main
        file. If so, it is a mistake.(May put a special flag for this case)
        [done]
    ** Transfer can list their parent as only an intermediate event or top
        event. No dangling transfers. (Check just like other nodes.)[done]
    ** Intermediate event can have many TransferIn. [done]
    ** ONLY one TransferOut per intermediate event [done]
    ** TransferOut cannot be a primary event. [done]
* Check if the transfer list is initiated correctly
    ** Error messages should indicate the name of the file from which the
        sub-tree is being transported. [done]
    ** Only one intermediate event can follow the transfer out [done]
    ** None of the elements in the transfer tree should refer to elements in
        the original tree. This is eliminated by appending subtree name to every
        intermediate event for internal calculations. However, this should not
        show up for graphing. [done]
    ** Transfer Intermediate events may show up in several places and cause
        conflicts with the uniqueness of intermediate events.
        May append some suffix to avoid problems, such as number of
        references. [done]
* Update database of top, inter, and primary events after reading the
  sub-tree. [done]
* Keep track of cyclic inclusions and prevent with an error.


Note:
    * If a user wants to re-use intermediate event in multiple places,
        transfers should be used instead of finding unique names for those
        intermediate events with the same structure and basic events.
    * Warn a user about cyclic inclusions.
    * May create inclusion logic for probability files.
