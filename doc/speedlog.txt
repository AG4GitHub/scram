Speed recordings of SCRAM for optimization and regression-detection purposes.
Only cases that help detect bottlenecks are recorded in this file.
If the performance becomes good enough to make the running times negligible
(less than 0.5s), the case is removed. The running times are taken from the
logs and reports.

System specs:     Core i5-2410M, Ubuntu 14.04 64bit
GCC version:      4.8.4
Boost version:    1.55
Libxml2:          2.9.1
TCMalloc:         2.1

If the current performance is not listed, then the best is the current.

----------- Input name [flags] (results) -----------

                    Best Achieved | Current Performance

============== Probability/Importance Analysis ===========

----------- Chinese Tree High Prob -l 5 -s 3 (p = 0.004267) ---
Release build:
--------------
- Prob Calculation  22s   |
- Importance Calc.  1.7s  |


==================== MCS Analysis =========================

---------- Baobab1 -l 6 (mcs = 2684) ----------------
Debug build:
---------------
- Cut Set Generation      1.2s   |
- Cut Set Minimization    0.25s  |


---------- Baobab1 -l 7 (mcs = 17432) ----------------
Debug build:
---------------
- Cut Set Generation      5.5s  |
- Cut Set Minimization    9.5s  |  11s

Release build:
--------------
- Cut Set Generation      0.70s  |
- Cut Set Minimization    0.80s  |  1.1s


---------- Baobab1 -l 8 (mcs = 25892) ----------------
Release build:
--------------
- Cut Set Generation      4.8s  |
- Cut Set Minimization    20s   |  40s


---------- CEA9601 -l 10 (mcs = 4832) ----------------
Debug build:
---------------
- Cut Set Generation      2.0s  |
- Cut Set Minimization    0.3s  |


---------- CEA9601 -l 14 (mcs = 4832) ----------------
Release build:
--------------
- Cut Set Generation      7.5s   |
- Cut Set Minimization    0.05s  |


---------- Baobab2 -l 5 (mcs = 1025) ----------------
Debug build:
---------------
- Cut Set Generation      20s    |
- Cut Set Minimization    0.40s  |

Release build:
---------------
- Cut Set Generation      3.2s   |
- Cut Set Minimization    0.05s  |


---------- Baobab2 -l 6 (mcs = 4805) ----------------
Release build:
---------------
- Cut Set Generation      18s    |
- Cut Set Minimization    0.25s  |


==================== Uncertainty Analysis =================

----------- Chinese Tree -l 5 -s 3 --uncertainty true -------
Release build:
--------------
- Calculation Time  51s  |


==================== Fault Tree Generation ================

---| -b 100000 -c 3 --common-g 0.1 --common-b 0.1 |---
Python script:
--------------
- Generation Time  8.7s  |  20s


==================== Fault Tree Validation ================

---| -b 300000 -c 3 --common-g 0.1 --common-b 0.1 |---
Debug build:
---------------
- Parsing and Validation    37s  |  41s

Release build:
--------------
- Parsing and Validation    23s  |
