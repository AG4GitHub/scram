Speed recordings of SCRAM for optimization and regression-detection purposes.
Only cases that help detect bottlenecks are recorded in this file.
If the performance becomes good enough to make the running times negligible,
the case is removed. The running times are taken from the logs.

System specs: Core i5-2410M, Ubuntu 14.04 64bit
GCC version: 4.8.4
Boost version: 1.55
Libxml2: 2.9.1

If the current performance is not listed, then the best is the current.

----------- Input name [flags] (results) -----------

                    Best Achieved | Current Performance

==================== Probability/Importance Analysis ======

----------- Chinese Tree High Prob -l 5 -s 3 (p = 0.02115378) ---
Release build:
--------------
- Prob Calculation  35s   |
- Importance Calc.  2.0s  |


==================== MCS Analysis =========================

----------- Chinese Tree (mcs = 392) ----------------------
Standard build:
---------------
- Cut Set Generation      0.25s  |
- Cut Set Minimization    0.25s  |


---------- fta-200 -l 17 (mcs = 8487) ---------------
Standard build:
---------------
- Cut Set Generation      0.60s  |
- Cut Set Minimization    7.5s   |

Release build:
--------------
- Cut Set Generation      0.12s  |
- Cut Set Minimization    1.8s   |

---------- fta-200 -l 24 (mcs = 16951) ---------------
Standard build:
---------------
- Cut Set Generation      1.1s  |
- Cut Set Minimization    26s   |

Release build:
--------------
- Cut Set Generation      0.23s  |
- Cut Set Minimization    6.0s   |


---------- Baobab1 -l 6 (mcs = 2684) ----------------
Standard build:
---------------
- Cut Set Generation      1.4s   |
- Cut Set Minimization    0.30s  |

Release build:
--------------
- Cut Set Generation      0.23s  |
- Cut Set Minimization    0.03s  |

---------- Baobab1 -l 7 (mcs = 17432) ----------------
Standard build:
---------------
- Cut Set Generation      10s   |
- Cut Set Minimization    9.5s  |

Release build:
--------------
- Cut Set Generation      1.8s   |
- Cut Set Minimization    0.80s  |  1.0s

---------- Baobab1 -l 8 (mcs = 25892) ----------------
Release build:
--------------
- Cut Set Generation      14s  |
- Cut Set Minimization    20s  |  30s


---------- CEA9601 -l 7 (mcs = 4578) ----------------
Release build:
--------------
- Cut Set Generation      9.8s   |
- Cut Set Minimization    0.05s  |


==================== Uncertainty Analysis =================

----------- Chinese Tree -l 5 -s 3 --uncertainty true -------
Release build:
--------------
- Calculation Time  65s  |


==================== Fault Tree Generation ================

---| -p 100000 -c 3 --reuse-g 0.1 --reuse-p 0.1 |---
Python script:
--------------
- Generation Time  8.7s  |  20s


==================== Fault Tree Validation ================

---| -p 300000 -c 4 --reuse-g 0.1 --reuse-p 0.1 |---
Standard build:
---------------
- Parsing and Validation    37s  |  55s

Release build:
--------------
- Parsing and Validation    34s  |
